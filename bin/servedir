#!/usr/bin/env node

var path = require('path'), fs = require('fs');

function controlArg(args, label, fn) {
  var i;
  
  var callback = function (arg, i) {
    args.splice(i, 1);
    fn(arg, i);
  };

  if ((i = args.indexOf(label)) !== -1) {
    callback(args[i], i);
  } else if ((i = args.indexOf('-' + label.substr(0, 1))) !== -1) {
    callback(args[i], i);
  } else if ((i = args.indexOf('--' + label)) !== -1) {
    callback(args[i], i);
  }
}

fs.realpath(__filename, function(error, script) {
  var servedir, root, port, options = {};
  if (error) throw error;

  controlArg(process.argv, 'quiet', function () {
    options.quiet = true;
  });

  controlArg(process.argv, 'external', function () {
    options.allowExternalAccess = true;
  });

  // Load `servedir`.
  servedir = require(path.join(path.dirname(script), '../lib/servedir'));

  // Configure the root directory and port.
  root = process.argv[2];
  port = process.argv[3];

  // Use the default directory if the root directory was omitted.
  if (!root) root = '.';

  var run = function () {
    // Create a new server.
    servedir(root, port, options);
    console.log('Serving %s on http://localhost:%d', path.resolve(root) + '/', port);
  }

  if (!port) {
    // Port specified as the first argument; root directory omitted.
    if ((port = Math.ceil(root)) > -1) {
      root = null;
    } else {
      // Use the default port if the port was omitted.
      port = servedir.defaultPort;
    }
  }

  var http = require('http'),
      testPort = +port;

  // try to check if anything is running on the default port, and increment until it's free
  (function next() {
    http.get({ port: testPort }, function (res) {
      res.destroy();
      testPort++;
      next();
    }).on('error', function () {
      port = testPort;
      run();
    });
  }());
});